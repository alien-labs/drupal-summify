<?php
// $Id$
/**
 * @file summify.module
 * Summify module
 */

define('SUMMIFY_HOME', 'http://summify.com');
define('SUMMIFY_PERM_PHP_VIS', 'use PHP for Summify visibility');
define('SUMMIFY_PHP_VIS_VALUE', 2);

/**
 * Implementation of hook_help().
 */
function summify_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/summify':
      $output = '<p>' . t("<a href=\"@summify_home\">Summify</a> provides contextual summaries of outbound links. This simple module adds a SCRIPT tag at the end of your Drupal pages.", array('@summify_home' => SUMMIFY_HOME)) . '</p>';
      return $output;
  }
}

/**
 * Implementation of hook_menu().
 */
function summify_menu() { 
  $items['admin/settings/summify'] = array(
    'title' => 'Summify',
    'description' => t('Settings for the Summify JavaScript client.'),
    'page callback' => 'drupal_get_form', 
    'page arguments' => array('summify_manage_settings'),
    'access arguments' => array('access administration pages'),
   );
  return $items;
}

function summify_manage_settings(&$form_state) {
  $access = user_access(SUMMIFY_PERM_PHP_VIS);
  $visibility = variable_get('summify_visibility', 0);
  $pages = variable_get('summify_pages', '');

  // General Summify configurations.
  $form['summify_general_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('General Summify settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#description' => '<p>'. t("In order to enable Summify for your Drupal website you need to specify your Summify username. (<a href=\"@summify_home/register/\">Register here</a> if you haven't already.) Once you specify your Summify username you can tweak and configure the Summify widget by visiting the <a href=\"@summify_home/dashboard/\">Summify dashboard</a>.", array('@summify_home' => SUMMIFY_HOME)) .'</p>',
  );
  $form['summify_general_settings']['summify_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Summify username'),
    '#description' => t('Please enter your Summify username.'),
    '#default_value' => variable_get('summify_username', ''),
  );

  // Page specific visibility configurations.
  $form['summify_visibility_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('What pages to enable Summify on'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  if ($visibility == SUMMIFY_PHP_VIS_VALUE && !$access) {
    // User is not allowed to change visibility PHP code
    $form['summify_visibility_settings']['summify_visibility'] = array('#type' => 'value', '#value' => SUMMIFY_PHP_VIS_VALUE);
    $form['summify_visibility_settings']['summify_pages'] = array('#type' => 'value', '#value' => $pages);
    $form['summify_visibility_settings']['#description'] = t("You don't have the required permissions to change these setting.");
  } else {
    $visibility_options = array(t('Add to every page except the listed pages.'), t('Add to the listed pages only.'));
    $visibility_description = t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>'));
    if ($access) {
      $visibility_options[] = t('Add if the following PHP code returns <code>TRUE</code> (PHP-mode, experts only).');
      $visibility_description .= ' '. t('If the PHP-mode is chosen, enter PHP code between %php. Note that executing incorrect PHP-code can break your Drupal site.', array('%php' => '<?php ?>'));
    }
    $form['summify_visibility_settings']['summify_visibility'] = array(
      '#type' => 'radios',
      '#title' => t('Add tracking to specific pages'),
      '#options' => $visibility_options,
      '#default_value' => $visibility,
    );
    $form['summify_visibility_settings']['summify_pages'] = array(
      '#type' => 'textarea',
      '#title' => t('Pages'),
      '#default_value' => $pages,
      '#description' => $visibility_description,
      '#wysiwyg' => FALSE,
    );
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Test & Save Configuration'),
  );
  return $form;
}

function summify_manage_settings_validate($form, &$form_state) {
  $username = $form_state['clicked_button']['#post']['summify_username'];
  if (trim($username) == '') {
    form_set_error('summify_username', t('Please enter your Summify username.'));
    return;
  }
  $client_id = _summify_get_default_client_id($username);
  if (!$client_id) {
    form_set_error('summify_username', t('@summify_home does not recognize this username.', array('@summify_home' => SUMMIFY_HOME)));
  }
}

function summify_manage_settings_submit($form, &$form_state) {
  $username = $form_state['clicked_button']['#post']['summify_username'];
  $visibility = $form_state['clicked_button']['#post']['summify_visibility'];
  $pages = $form_state['clicked_button']['#post']['summify_pages'];
  $client_id = _summify_get_default_client_id($username);
  variable_set('summify_username', $username);
  variable_set('summify_client_id', $client_id);
  variable_set('summify_visibility', $visibility);
  variable_set('summify_pages', $pages);
  drupal_set_message(t('The Summify options have been saved. Your client ID is @client_id.', array('@client_id' => $client_id)));
}

/**
 * Call the Summify endpoint to obtain the default client_id for given
 * username.
 *
 * Return client_id or FALSE if not found.
 */
function _summify_get_default_client_id($username) {
  $curl = curl_init(); 
  $request_url = SUMMIFY_HOME . "/user-api/default-client-id/" . urlencode($username);
  curl_setopt($curl, CURLOPT_URL, $request_url);
  // Return the transfer as a string 
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  $response = curl_exec($curl);
  $response_info = curl_getinfo($curl);
  curl_close($curl);
  if ($response_info['http_code'] != 200) {
    return FALSE;
  } else {
    return $response;
  }
}

/**
 * Implementation of hook_perm().
 */
function summify_perm() {
  return array(SUMMIFY_PERM_PHP_VIS);
}

/**
 * Implementation of hook_footer().
 * Insert Summify <script/> tag in page footer.
 */
function summify_footer($main = 0) {
  $username = variable_get('summify_username', '');
  $client_id = variable_get('summify_client_id', '');
  if ($username && $client_id && _summify_visibility_pages()) {
    $script_src = SUMMIFY_HOME . "/client/v1/" . urlencode($client_id) . "/client.js";
    $script_tag = "<script text=\"text/javascript\" src=\"". htmlentities($script_src) . "\"></script>\n";
    return $script_tag;
  }
  return '';
}

/**
 * Based on visibility setting this function returns TRUE if the Summify code should
 * be added to the current page and otherwise FALSE.
 */
function _summify_visibility_pages() {
  static $page_match;

  // Cache visibility setting in hook_init for hook_footer.
  if (!isset($page_match)) {
    $visibility = variable_get('summify_visibility', 0);
    $pages = variable_get('summify_pages', '');

    // Match path if necessary.
    if (!empty($pages)) {
      if ($visibility < SUMMIFY_PHP_VIS_VALUE) {
        $path = drupal_get_path_alias($_GET['q']);
        // Compare with the internal and path alias (if any).
        $page_match = drupal_match_path($path, $pages);
        if ($path != $_GET['q']) {
          $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
        }
        // When $visibility has a value of 0, the block is displayed on
        // all pages except those listed in $pages. When set to 1, it
        // is displayed only on those pages listed in $pages.
        $page_match = !($visibility xor $page_match);
      }
      else {
        $page_match = drupal_eval($pages);
      }
    } else {
      $page_match = ($visibility == 0);
    }
  }
  return $page_match;
}
